databaseChangeLog:

  - changeSet:
      author: drsteini
      id: "create.role.mlr_legacy_data"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_roles where rolname = 'mlr_legacy_data'
      changes:
        - sql: create role mlr_legacy_data with login password '${MLR_LEGACY_DATA_PASSWORD}';
        - rollback: drop role if exists mlr_legacy_data;

  - changeSet:
      author: drsteini
      id: "grant.mlr_legacy_data.to.mlr_legacy"
      changes:
        - sql: grant mlr_legacy_data to mlr_legacy;
        - rollback: revoke mlr_legacy_data from mlr_legacy;

  - changeSet:
      author: drsteini
      id: "create.role.mlr_legacy_user"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
            expectedResult: 0
            sql: select count(*) from pg_roles where rolname = 'mlr_legacy_user'
      changes:
        - sql: create role mlr_legacy_user with login password '${MLR_LEGACY_USER_PASSWORD}';
        - rollback: drop role if exists mlr_legacy_user;

  - changeSet:
      author: drsteini
      id: "grant.mlr_legacy_user.to.mlr_legacy_data"
      changes:
        - sql: grant mlr_legacy_user to mlr_legacy_data;
        - rollback: revoke mlr_legacy_user from mlr_legacy_data;
